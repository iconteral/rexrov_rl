<launch>
    <arg name="uuv_name" default="rexrov"/>
    <arg name="model_name" default="$(arg uuv_name)"/>
    <arg name="epsilon" default="0.1"/>
    <arg name="alpha" default="0.01"/>
    <arg name="gamma" default="0.9"/>
    <arg name="max_effort" default="1000"/>

    <include file="$(find uuv_gazebo_worlds)/launch/ocean_waves.launch"/>

    <include file="$(find uuv_descriptions)/launch/upload_rexrov.launch">
        <arg name="x" default="20"/>
        <arg name="y" default="0"/>
        <arg name="z" default="-20"/>
        <arg name="yaw" default="0"/>
    </include>

    <include file="$(find uuv_thruster_manager)/launch/thruster_manager.launch">
        <arg name="uuv_name" value="$(arg uuv_name)"/>
        <arg name="model_name" value="$(arg model_name)"/>
        <arg name="output_dir" value="$(find uuv_thruster_manager)/config/$(arg model_name)"/>
        <arg name="config_file" value="$(find uuv_thruster_manager)/config/$(arg model_name)/thruster_manager.yaml"/>
        <arg name="tam_file" value="$(find uuv_thruster_manager)/config/$(arg model_name)/TAM.yaml"/>
    </include>

    <group ns="$(arg uuv_name)">
        <node pkg="rexrov_rl"
              type="tutorial_rl_controller.py"
              name="tutorial_rl_controller"
              output="screen"
              respawn="false">
            <param name="epsilon" value="$(arg epsilon)"/>
            <param name="alpha" value="$(arg alpha)"/>
            <param name="gamma" value="$(arg gamma)"/>
            <param name="max_effort" value="$(arg max_effort)"/>
            <!-- 
                RL控制器的输出remap到推进器分配器输入（input_stamped）
                RL控制器的状态输入remap到姿态真值
            -->
            <!-- 
            <remap from="wrench" to="thruster_manager/input_stamped"/>
            <remap from="odom" to="pose_gt"/>
             -->
            <remap from="odom" to="pose_gt"/>
            <remap from="trajectory" to="dp_controller/trajectory"/>
            <remap from="input_trajectory" to="dp_controller/input_trajectory"/>
            <remap from="waypoints" to="dp_controller/waypoints"/>
            <remap from="error" to="dp_controller/error"/>
            <remap from="reference" to="dp_controller/reference"/>
            <remap from="thruster_output" to="thruster_manager/input_stamped"/>
        </node>

        <!-- 轨迹可视化节点，无需remap -->
        <node pkg="uuv_control_utils"
              type="trajectory_marker_publisher.py"
              name="trajectory_marker_publisher"
              output="screen"
              respawn="false"/>
    </group>

    <node name="rviz" pkg="rviz" type="rviz" output="screen"
          args="-d $(find uuv_gazebo)/rviz/controller_demo.rviz"/>
</launch>